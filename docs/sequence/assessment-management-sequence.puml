@startuml Assessment Management Sequence

actor Teacher
actor Student
participant "UI" as UI
participant "AssessmentController" as AC
participant "Assessment" as A
participant "Subject" as S
participant "Log" as L
database "Database" as DB

== Assessment Creation ==
Teacher -> UI: Create Assessment
activate UI
UI -> AC: createAssessment(data)
activate AC
AC -> S: validateSubject()
activate S
S --> AC: valid
deactivate S

AC -> A: createAssessment()
activate A
A -> DB: save()
DB --> A: success
A --> AC: assessmentCreated
deactivate A

AC -> L: logAction("Assessment Created")
activate L
L -> DB: save()
L --> AC: logged
deactivate L

AC --> UI: success
deactivate AC
UI --> Teacher: showSuccess
deactivate UI

== View Assessments ==
Student -> UI: View Assessments
activate UI
UI -> AC: getAssessments(studentId)
activate AC
AC -> A: findByStudent()
activate A
A -> DB: fetch()
DB --> A: assessments
A --> AC: assessmentList
deactivate A
AC --> UI: assessmentList
deactivate AC
UI --> Student: displayAssessments
deactivate UI

== Submit Assessment ==
Student -> UI: submitAssessment
activate UI
UI -> AC: submitAssessment(submission)
activate AC
AC -> A: addSubmission()
activate A
A -> DB: saveSubmission()
DB --> A: success
A --> AC: submissionAdded
deactivate A

AC -> L: logAction("Assessment Submitted")
activate L
L -> DB: save()
L --> AC: logged
deactivate L

AC --> UI: submissionSuccess
deactivate AC
UI --> Student: showSuccess
deactivate UI

== Mark Assessment ==
Teacher -> UI: markAssessment
activate UI
UI -> AC: submitMarks(marks)
activate AC
AC -> A: updateSubmission()
activate A
A -> A: calculateGrade()
A -> DB: updateMarks()
DB --> A: success
A --> AC: marksUpdated
deactivate A

AC -> L: logAction("Assessment Marked")
activate L
L -> DB: save()
L --> AC: logged
deactivate L

AC --> UI: markingSuccess
deactivate AC
UI --> Teacher: showSuccess
deactivate UI

== View Results ==
Student -> UI: viewResults
activate UI
UI -> AC: getResults(studentId)
activate AC
AC -> A: getSubmissionResults()
activate A
A -> DB: fetch()
DB --> A: results
A --> AC: resultsList
deactivate A
AC --> UI: resultsList
deactivate AC
UI --> Student: displayResults
deactivate UI

@enduml