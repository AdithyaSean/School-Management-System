@startuml Sectional Head Time Table Management
title Sectional Head Time Table Management

actor "Sectional Head" as SH
participant "UI" as UI
participant "TimeTableController" as TC
participant "TimeTable" as TT
participant "Session" as S
participant "Teacher" as T
participant "Log" as L
database "Database" as DB

== Create Time Table ==
SH -> UI: Create Time Table
activate UI
UI -> TC: createTimeTable(data)
activate TC

TC -> TT: validateSchedule()
activate TT
TT --> TC: valid
deactivate TT

TC -> TT: createTimeTable()
activate TT
TT -> S: createSessions()
activate S
S -> DB: save()
DB --> S: success
S --> TT: sessionsCreated
deactivate S

TT -> DB: save()
DB --> TT: success
TT --> TC: timeTableCreated
deactivate TT

TC -> T: notifyTeachers()
activate T
T -> DB: save()
DB --> T: notified
T --> TC: teachersNotified
deactivate T

TC -> L: logAction("TimeTable Created")
activate L
L -> DB: save()
DB --> L: success
L --> TC: logged
deactivate L

TC --> UI: success
deactivate TC
UI --> SH: showSuccess
deactivate UI

== Update Time Table ==
SH -> UI: Update Time Table
activate UI
UI -> TC: updateTimeTable(id, data)
activate TC

TC -> TT: findById()
activate TT
TT -> DB: fetch()
DB --> TT: timeTable
TT --> TC: timeTable
deactivate TT

TC -> TT: validateSchedule()
activate TT
TT --> TC: valid
deactivate TT

TC -> TT: updateTimeTable()
activate TT
TT -> S: updateSessions()
activate S
S -> DB: update()
DB --> S: success
S --> TT: sessionsUpdated
deactivate S

TT -> DB: update()
DB --> TT: success
TT --> TC: timeTableUpdated
deactivate TT

TC -> T: notifyTeachers()
activate T
T -> DB: save()
DB --> T: notified
T --> TC: teachersNotified
deactivate T

TC -> L: logAction("TimeTable Updated")
activate L
L -> DB: save()
DB --> L: success
L --> TC: logged
deactivate L

TC --> UI: success
deactivate TC
UI --> SH: showSuccess
deactivate UI

== Delete Time Table ==
SH -> UI: Delete Time Table
activate UI
UI -> TC: deleteTimeTable(id)
activate TC

TC -> TT: findById()
activate TT
TT -> DB: fetch()
DB --> TT: timeTable
TT --> TC: timeTable
deactivate TT

TC -> TT: deleteTimeTable()
activate TT
TT -> S: deleteSessions()
activate S
S -> DB: delete()
DB --> S: success
S --> TT: sessionsDeleted
deactivate S

TT -> DB: delete()
DB --> TT: success
TT --> TC: timeTableDeleted
deactivate TT

TC -> T: notifyTeachers()
activate T
T -> DB: save()
DB --> T: notified
T --> TC: teachersNotified
deactivate T

TC -> L: logAction("TimeTable Deleted")
activate L
L -> DB: save()
DB --> L: success
L --> TC: logged
deactivate L

TC --> UI: success
deactivate TC
UI --> SH: showSuccess
deactivate UI

@enduml