@startuml Communication Sequence

actor User
participant "Communication UI" as UI
participant "Communication Controller" as Ctrl
participant "Message Service" as MsgSvc
database "Message Database" as DB
participant "User Log Service" as Log

User -> UI: Send Message
activate UI
UI -> Ctrl: sendMessage(senderId, receiverId, message)
activate Ctrl
Ctrl -> MsgSvc: processMessage(senderId, receiverId, message)
activate MsgSvc
MsgSvc -> DB: saveMessage()
DB --> MsgSvc: confirm
MsgSvc --> Ctrl: success
Ctrl -> Log: updateUserLog(senderId, "MESSAGE_SENT")
activate Log
Log --> Ctrl: log updated
deactivate Log
Ctrl --> UI: show success
UI --> User: confirmation
deactivate UI
deactivate Ctrl
deactivate MsgSvc

@enduml
