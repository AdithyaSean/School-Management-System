@startuml School Management System

skinparam Linetype ortho
skinparam classAttributeIconSize 0

class User {
  # userType: String
  # userID: String
  # username: String
  # password: String
  # email: String
  # firstName: String
  # lastName: String
  # dateOfBirth: Date
  # fingerprint: String
  # enterAttendance()
  # login()
  # viewProfile()
  # updateProfile()
  # logout()
}

class Student {
  - studentID: String
  - gradeLevel: int
  - studentReport: StudentReport
  - getStudentID()
  - getGradeLevel()
  - setGradeLevel()
  - getReport()
  - createReport()
  - updateReport()
}

class Teacher {
  # teacherID: String
  # subjectTaught: String
  # classTaught: String
  # society: String
  # club: String
  # getTeacherID()
  # getSubjectTaught()
  # setSubjectTaught()
  # getClassTaught()
  # setClassTaught()
  # updateClass()
  # viewStudentReport()
  # updateStudentReport()
  # viewStudentLetters()
  # informVicePrincipal()
  # informSectionalHead()
}

class SectionalHead {
  - section: String
  - getSection()
  - setSection()
  - informTeachers()
  - informStudents()
  - viewStudents()
  - addStudents()
  - updateStudents()
  - deleteStudents()
  - createClass()
  - deleteClass()
}

class VicePrincipal {
  # role: String
  # principalGrade: String
  # informPrincipal()
  # viewTeachers()
  # addTeachers()
  # updateTeachers()
  # deleteTeachers()
  # informSectionalHead()
  # viewEvents()
  # createEvents()
  # deleteEvents()
}

class Principal {
  # broadcastAnnouncements()
  # informUsers()
  # informVicePrincipals()
  # viewAdministrativeInformation()
  # viewFinancialInformation()
  # addPolicy()
  # deletePolicy()
}

class Admin {
  - adminLog: UserLog
  - masterPassword: String
  - viewSystemDatabase()
  - createRecords()
  - editRecords()
  - deleteRecords()
  - viewUserInformation()
  - addUser()
  - updateUser()
  - deleteUser()
  - modifyPermissions()
  - viewSystemMonitor()
  - viewBackups()
  - regularInformationBackups()
  - generateSystemReports()
  - addUserLog()
  - updateUserLog()
  - deleteUserLog()
}

class Payment {
  - paymentId: int
  - amount: double
  - description: string
  - paymentDate: date
  - paymentMethod: string
  - status: string
  + paySchoolFees()
  + payWelfareFees()
  + donateSchool()
}

class Request {
  - queryId: int
  - userId: int
  - description: string
  - submissionDate: date
  - response: string
  - responseDate: date
  + viewQuery()
}

class UserLog {
  - logId: int
  - userId: int
  - action: string
  - timestamp: datetime
  + getLogsByUser()
  + getLogsByAction()
  + getLogsByTimestamp()
}

class SchoolPolicy {
  - policyId: int
  - policyName: string
  - description: string
  + updatePolicy()
  + getPolicyById()
  + getPolicyByName()
}

class Finance {
  - schoolBudget: double
  - income: double
  - expense: double
  - donations: double
  - studentPayments: List<Payment>
  + viewFinancialInformation()
}

class EducationalDashboard {
  - societies: List<Society>
  - assessments: List<Assessment>
  - competitions: List<Competition>
  + viewSocieties()
  + applyForSociety()
  + createSociety()
  + deleteSociety()
  + viewSubjects()
  + viewSubjectContent()
  + viewAssessments()
  + submitAssessment()
  + gradeAssessment()
  + createAssessment()
  + updateAssessment()
  + deleteAssessment()
  + viewCompetitions()
  + applyForCompetition()
  + createCompetition()
  + deleteCompetition()
}

class ExtracurricularDashboard {
  - clubs: List<Club>
  - competitions: List<Competition>
  + viewContent()
  + viewClubs()
  + applyForClub()
  + createClub()
  + deleteClub()
  + viewCompetitions()
  + applyForCompetition()
  + createCompetition()
  + deleteCompetition()
}

class ExamInformation {
  - exams: List<Exam>
  + viewExams()
  + createExam()
  + updateExam()
  + deleteExam()
  + enterExamResults()
  + deleteExamResults()
  + applyForRe-correction()
  + enterExamResult()
  + changeExamResult()
  + deleteExamResult()
}

class Assessment {
  - id: String
  - title: String
  - description: String
  - dueDate: Date
  - maxPoints: int
  - studentSubmissions: Map<Student, Submission>
  - grade: Grade
  + submitSubmission()
  + updateSubmission()
  + removeSubmission()
}

class Society {
  - id: String
  - name: String
  - description: String
  - members: List<SocietyMember>
  + addMember()
  + removeMember()
}

class Club {
  - id: String
  - name: String
  - description: String
  - members: List<ClubMember>
  + addMember()
  + removeMember()
}

class Competition {
  - id: String
  - name: String
  - description: String
  - startDate: Date
  - endDate: Date
  - participants: List<Student>
  + enrollParticipant()
  + withdrawParticipant()
}

class Event {
  - eventId: int
  - eventName: string
  - eventDate: date
  - location: string
  - description: string
  + updateEvent()
}

class Exam {
  - id: String
  - name: String
  - description: String
  - date: Date
  - duration: int
  - results: Map<Student, Result>
  + viewExam()
  + updateExam()
  + getResults()
}

class Result {
  - score: int
  - grade: String
  + getScore()
  + getGrade()
}

class Submission {
  - content: String
  - submissionDate: Date
  + editSubmission()
}

class ClubMember {
  - id: String
  - name: String
  - role: String
  - leaveClub()
}

class SocietyMember {
  - id: String
  - name: String
  - role: String
  - leaveSociety()
}

class Grade {
  - classes: List<Class>
  - students: List<Student>
  - studentCount: int
  - subjects: List<Subject>
  - teachers: List<Teacher>
  + addStudents()
  + removeStudents()
  + addTeachers()
  + removeTeachers()
}

class Subject {
  - subjectName: String
  - subjectContent: String
  - teachers: List<Teacher>
  - creditPoints: int
  - hours: int
  + addContent()
  + removeContent()
}

class Class {
  - teacher: Teacher
  - classMonitor: Student
  - students: List<Student>
  - studentCount: int
  - timeTable: TimeTable
  + addClassMonitor()
  + removeClassMonitor()
}

class Announcement {
  - title: String
  - content: String
  - userTypes: String
  + updateAnnouncement()
}

class SystemLog {
  - users: int
  - onlineUsers: int
  - systemErrors: String
  - date: Date
  + viewSystemLog()
}

class StudentReport {
  - dateCreated: Date
  - dateModified: Date
  - generatedBy: String
  - studentPerformance: String
  - studentAttendance: String
  - studentLetters: String
  - studentAchievements: String
  - studentHealthStatus: String
  + updateStudentReport()
  + viewStudentReport()
}

class SystemReport {
  - dateCreated: Date
  - dateModified: Date
  - generatedBy: String
  - systemUtilization: int
  - systemLogs : List<SystemLog>
  - errors: String
  + viewSystemReport()
}

Grade "1" *-- "1..*" Class : Has
Grade "1" *-- "1..*" Teacher : Has
Grade "1" *-- "1" SectionalHead : Has
Grade "1" *-- "1..*" Subject : Has
Class "1" *-- "1" Teacher : Has
Class "1" *-- "1..*" Student : Has

User <|-- Student
User <|-- Teacher
User <|-- VicePrincipal
VicePrincipal <|-- Principal
VicePrincipal -- Event
Principal <|-- Admin

Admin "1" -- "0..*" SystemReport : Generate
Admin "1" -- "0..*" UserLog : View
Admin "1" -- "1" SystemLog : View
Principal "1" -- "1" VicePrincipal : Inform
Principal "1" -- "0..*" SchoolPolicy : Manage
Principal "1" -- "0..*" Announcement : Manage
VicePrincipal "1" -- "1" Finance : Manage
VicePrincipal "1" -- "1..*" Teacher : Manage
SectionalHead "1" -- "1" Grade : Manage
SectionalHead "1*" -- "1..*" Student : Manage
SectionalHead "1*" -- "1..*" Teacher : Inform
Teacher "1" -- "1" ExtracurricularDashboard : Manage
Teacher "1" -- "1" EducationalDashboard : Manage
Teacher "1" -- "0..*" Request : Manage
Teacher "1" -- "1..*" Subject : Manage
Teacher "1" -- "0..*" StudentReport : Manage
Student "1" -- "1" EducationalDashboard : View
Student "1" -- "1" ExtracurricularDashboard : View
Student "1" -- "0..*" Request : Submit
Student "1" -- "0..*" Payment : Make
User "1" -- "0..*" Event : View
User "1" -- "0..*" Announcement : View

Society "1" *-- "1..*" SocietyMember : Has
Club "1" *-- "1..*" ClubMember : Has
User "1" *-- "1" UserLog : Has
Student "1" *-- "1" StudentReport : Has

Finance "1" o-- "0..*" Payment : Has
EducationalDashboard "1" o-- "0..*" ExamInformation : Has
EducationalDashboard "1" o-- "0..*" Society : Has
EducationalDashboard "1" o-- "0..*" Competition : Has
EducationalDashboard "1" o-- "0..*" Assessment : Has
EducationalDashboard "1" o-- "0..*" Subject : Has
ExamInformation "1" o-- "0..*" Exam : Has
Exam "1" O--- "0..*" Result : Has
Assessment "1" o-- "0..*" Submission : Has
ExtracurricularDashboard "1" o-- "0..*" Competition : Has
ExtracurricularDashboard "1" o-- "0..*" Club : Has

@enduml